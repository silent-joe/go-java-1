class GameSession

	твой класс - бин.
	метод displayStuffList - логика
	логичнее переопределить toString в удобный тебе вид и использовать в нужном тебе месте.
	
	получать stuffList не нужно? 
	Если нет, то зачем сохранять stuffs?
	

class UserAccount
	
	это тоже бин. Потому  методыcheckLogin должен быть вынесены в бизнес логику.
	если есть причины  использовать как есть - было бы интересно услышать
	
	createAccount - это по идее конструктор
	
	createCharacterInAccount - используется только в тестах. зачем он в моделе?
	
	return this.loginName.equals(login) && this.password.equals(password);
	  потенциальное место для nullpointerexception
	  посмотри java.util.Objects#equals
	  
	  
class AbstractCharacter

    getAttribute - если нет значение - возвращай null, пустая строка - значение
    лучше сделать метод boolean isExistsAttribute(name)	  
		 
	getStringForOutput - это должно быть toString
	
	setAttribute - лучше addAttribute
	
	getAllSkills()  - не нужно возвращать строку, работать лучше с объектами.
	 создавая строку ты обязываешь потребителя парсить ее. а это место ошибок.
	 
	 
	getSkillValue  - пл идее то же что и getAttribute
	
	 
class ActionResult

	лучше использовать message вместо succesMessage и succesMessage
	так как success говорит успешный result или нет
	
	
сlass ParameterObject:

	думаю лучше обсудить с Сергеем использование public в определении филдов.
	тут мнения могут біть очень разными
	
	
Общее:

   не жалеть переносов строк между объявлением переменных, между методами, конструкторы
   объявлять между обявлением филдов и методов 