21.01.2015 23:30:

ua.com.goit.gojava.m__jane.model package:

	1. пусті рядки між зміними не завадять:
			private int id;
			private String content;
			private QuestionCategory questionCategory;	
			
	2. toString буде читабельнішим якщо його робити так:
		return new StringBuilder()
		   .append("Question [id=").append(id)
		   .append(", content=").append(content)
		   ....
		   .toString();
		так як наступне не чітабельне
				.append(questionCategory.getName()).append(", profile=")
				.append(profile.getName()).append(", openQuestion=")	
		 
	
ProfileServiceImpl class
	
	є код:
		private final static String[] PROFILES;
		static {
			PROFILES = new String[2];
			PROFILES[0] = "1`Торгові питання";
			PROFILES[1] = "2`Законодавство";
		}		
	далі ти все це парсиш. на мою думку це лишня робота, копі-паси по класам, 
	і нікому не потрібний генератор помилок.
	
	тому в поточному завдані краще так:
			private final List<Profile> profileList = new ArrayList<Profile>() {{
				this.add(new Profile() {{
					this.setId(1);
					this.setName("Торгові питання");
				}});
			}};	
	До того ж, на далі у нас ці списки виродяться, швидше всього будемо працювати з базою.
	Дані зміни потрібно внести для усіх реалізацій інтерфейсів
	
QuestionServiceImpl.profileService field:

    В коді: private final ProfileService profileService = new ProfileServiceImpl();
    це погана практика, так як за звичай використосовуютья різні dependency injection
    більш правильно зробити так:
    
    	private ProfileService profileService;
    	
		public void setProfileService(ProfileService profileService) {
			this.profileService = profileService;
		}	
	
	До того ж може бути інша реалізація ProfileService. І яку саме використосовувати
	не повинен вирішувати 	QuestionServiceImpl.

UML: 
	у вчорашньому коментарі є посилання на приклади. Подивись їх.	
	
	
==================================================================================

21.01.2015 00:20

service and dao

	1. В именованиях классов принято DAO писать большими буквами
	
	2. поведение DAO и сервисов у тебя полностостью дублируются, потому
	
	2.1 я бы удалил все DAO
	2.2. отказался бы от InnerStorage и хранил бы все данные в реализациях сервисов.
	2.3. поскольку мы потом прийдем к использованию JPA и рефакторинг сервисов будет
		 очень простым. Множество разношерстных источников встречается редко, и я пока
		 не создавал бы себе доп работ
		 
Именование методов.

	Есть методы
		public List<Question> getQuestionList();
		public List<Question> getQuestionListByProfile(Profile profile);
	
	Оба возврщают один и тот же тип. Результат зависит от аргументов.
	Потому правильно их именовать так:	
		public List<Question> getQuestionList();
		public List<Question> getQuestionList(Profile profile);	
	Необходим рефакторинг всех подобных случаев.
	
	Аналогично public Question getQuestionById(int id); было бы лучше назвать
		public Question getQuestion(int questionId);
		
		public int getCount(); - public int getQuestionCount();	
		
порядок методов
	
	 в java bean лучше getter and setter приводить вместе, а toString, equals and hashcode - в конце.
	 

UML:

	1. http://www.ibm.com/developerworks/rational/library/content/RationalEdge/sep04/bell/
	2. http://www.uml-diagrams.org/class-diagrams-overview.html	
		 
P.S.
	после внесения правок - приведем в порядок остальной код.

